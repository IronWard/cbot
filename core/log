# cbot
# Module name     : log
# Module category : core
# Depends         : cbot
# Description     : write logs to files
#                   The master log is named CCYYMMDD.log, used by core
#                   modules.

# descriptor of the master log file
LOG_FD=-1
# Date when the last log line is written
LOG_DATE=''

# associative array of file names and their descriptors
# LOG_FILES[<filename>]=<file descriptor>
declare -A LOG_FILES

#----------------------------------------------------------------------#
# Description:
#   close the master log
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function log.close () {
  exec {LOG_FD}>&-
  LOG_FD=-1
  return $?
}


#----------------------------------------------------------------------#
# Description:
#   Close a log file.
# Usage:
#   log.closefile <filename>
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function log.closefile () {
  local FILE FD
  [[ $1 ]] || return 1
  FD=${LOG_FILES["$1"]}
  [[ $FD ]] || return 2
  unset LOG_FILES["$1"]
  exec {FD}>&-
  return $?
}


#----------------------------------------------------------------------#
# Description:
#   open the master log
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function log.open () {
  local FILE
  LOG_DATE=$(date +%Y%m%d)
  FILE=$BOTDIR/logs/$LOG_DATE.log

  [[ -d $BOTDIR/logs ]] || mkdir $BOTDIR/logs

  if [[ -f $FILE ]]
  then
    exec {LOG_FD}>>$FILE
  else
    exec {LOG_FD}>$FILE
  fi

  return $?
}


#----------------------------------------------------------------------#
# Description:
#   Open a log file. Log files are saved in logs/ folder.
# Usage:
#   log.openfile <filename>
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function log.openfile () {
  local FILE FD
  [[ $1 ]] || return 1
  FILE="$BOTDIR/logs/$1"
  touch "$FILE" >/dev/null 2>&1
  [[ $? -eq 0 ]] || return 2
  exec {FD}>>"$FILE"
  [[ $? -eq 0 ]] || return 3
  LOG_FILES["$1"]=$FD
  return 0
}


#----------------------------------------------------------------------#
# Description:
#   write the master log
# Usage:
#   log.write <text>
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function log.write () {
  local DATE

  [[ $LOG_FD -eq -1 ]] && return 0

# check whether to open a new log file
  DATE=$(date +%Y%m%d)
  [[ $DATE == $LOG_DATE ]] || {
    log.close
    log.open
  }

# timestamp the text before logging
  echo $(date '+{%T}')" $*" >&$LOG_FD
  return $?
}


#----------------------------------------------------------------------#
# Description:
#   Write a log file.
# Usage:
#   log.writefile <filename> <text>
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function log.writefile () {
  local FILE FD TEXT
  FILE=$1
  shift
  TEXT="$*"
  [[ $FILE && $TEXT ]] || return 1
  [[ ${LOG_FILES[$FILE]} ]] || {
    log.openfile "$FILE"
    [[ $? -eq 0 ]] || return 2
  }
  FD=${LOG_FILES[$FILE]}
  echo "$*" >&$FD
}


log.open
[[ $? -ne 0 ]] && cbot.die "failed to open log file"

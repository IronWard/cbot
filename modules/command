# cbot
# Module name: command
# Module category: event handler
# Description: remote commands


#----------------------------------------------------------------------#
# Description:
#   parse channel message.
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function command.parse_cmsg () {
  local RE

  RE='^\s*'$BOTNICK'[ ,:]*(.*)'

  [[ $IRC_EVENTSTRING =~ $RE ]] && {
    if [[ ${BASH_REMATCH[1]} == '' ]]
    then
      transport.write "PRIVMSG $IRC_TARGET :$IRC_NICK, yes sir?"
    else
      transport.write "PRIVMSG $IRC_TARGET :$IRC_NICK, ${BASH_REMATCH[1]}"
    fi
  }
}

#----------------------------------------------------------------------#
# Description:
#   parse private message.
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function command.parse_pmsg () {
  local RE CMD TXT TARGET PARM FORMAT STR
  [[ $IRC_TARGET == $BOTNICK ]] || return 0
  RE='^ *\.([^ ]+) *(.*)$'
  [[ $IRC_EVENTSTRING =~ $RE ]] || return 0
  CMD=${BASH_REMATCH[1]}
  TXT=${BASH_REMATCH[2]}
  TARGET=''
  PARM=''
  FORMAT=0

  RE='^([^ ]+) +(.+)$'
  [[ $TXT =~ $RE ]] && {
    TARGET=${BASH_REMATCH[1]}
    PARM=${BASH_REMATCH[2]}
    FORMAT=1
  }

  case $CMD in
    (action)
      [[ $FORMAT -eq 1 ]] && {
        STR="PRIVMSG $TARGET :"$'\001ACTION '"$PARM"$'\001'
        transport.write "$STR"
      }
      ;;
    (join)
      [[ $TXT == '' ]] || transport.write "JOIN $TXT"
      ;;
    (load)
      [[ -f "$TXT" ]] && loader.load "$TXT"
      ;;
    (nick)
      [[ $TXT == '' ]] || transport.write "NICK $TXT"
      ;;
    (part)
      [[ $TXT == '' ]] || transport.write "PART $TXT"
      ;;
    (quit)
#     Do NOT use 'QUIT' if you are using OpenSSL as transport module.
#     OpenSSL will disconnect if a 'QUIT' is read from stdin.
      transport.write "quit :$TXT"
      ;;
    (quote)
      [[ $TXT == '' ]] || transport.write "$TXT"
      ;;
    (say)
      [[ $FORMAT -eq 1 ]] && transport.write "PRIVMSG $TARGET :$PARM"
      ;;
    (unload)
      [[ -f "$TXT" ]] && loader.unload "$TXT"
      ;;
    (version)
      [[ $TXT == '' ]] || \
        transport.write "PRIVMSG $TXT :"$'\001VERSION\001'
      ;;
    (iciba)
      command.iciba "$TXT" &
      ;;
  esac

}


function command.install () {
  LOADER_INSTALLSTRING="_CMSG command.parse_cmsg _PMSG command.parse_pmsg"
}

function command.uninstall () {
  unset -f command.iciba
}

#----------------------------------------------------------------------#
# Description:
#   call 金山词霸 plugin
#---+----1----+----2----+----3----+----4----+----5----+----6----+----7-#
function command.iciba () {
  local T
  T=$(bash "$PLUGINDIR/iciba" $1)
  [[ $T == "" ]] || {
    transport.write "PRIVMSG $IRC_NICK :$T"
  }
  exit 0
}
